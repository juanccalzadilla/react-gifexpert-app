{"version":3,"sources":["Components/AddCategory.js","helpers/getGif.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAMlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,YAAY,YACZC,SAnBY,SAACR,GACjBF,EAAcE,EAAES,OAAOH,a,uBCHlBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCFPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IAEzB,OACI,sBAAKM,UAAU,uDAAf,UACG,qBAAKC,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIE,QAC5B,4BAAIF,EAAIE,YCHNO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECDwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAd,GAGEY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAM1B,CAACpB,IAGGqB,EDvB2BI,CAAazB,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,0CAAd,SACKhB,IAGJoB,GAAW,sBAAKJ,UAAU,UAAf,UACR,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,sBAGnB,qBAAKA,UAAU,YAAf,SAGKH,EAAOJ,KAAI,SAAAC,GACR,OAAO,cAAC,EAAD,CAEHA,IAAKA,GADAA,EAAIC,aEYlBe,EA/BM,WAKjB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,eAAC,WAAD,WACI,oBAAIgC,UAAU,QAAd,2BACA,cAAC,EAAD,CAAahC,cAAeA,IAC5B,uBACA,6BAEK2C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAECA,SAAUA,GADNA,Y,MCrB1B4B,IAASC,OAEP,cAAC,EAAD,IAAgBC,SAASC,eAAe,W","file":"static/js/main.f34cd55d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInput = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2 ) {\r\n            setCategories(cats =>[inputValue,...cats])\r\n            setInputValue('')\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            placeholder=\"Search...\"\r\n            onChange={\r\n                handleInput\r\n            }\r\n            \r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n\r\nexport const getGifs = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=20&api_key=qzaEVdhssg0qjwCQqNoIQ1l2qfmSctlK`\r\n    const resp = await fetch (url)\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__fast\">\r\n           <img src={img.url} alt={img.title}></img>\r\n           <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn upper\">\r\n                {category}\r\n            </h3>\r\n\r\n            {loading && <div className=\"spinner\">\r\n                <div className=\"double-bounce1\"></div>\r\n                <div className=\"double-bounce2\"></div>\r\n            </div>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n\r\n                {images.map(img => {\r\n                    return <GifGridItem\r\n                        key={img.id}\r\n                        img={img} />\r\n                })}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGif\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(img => {\r\n\r\n                \r\n                    setState({\r\n                        data: img,\r\n                        loading: false\r\n\r\n                    })\r\n                \r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","\r\nimport React, { Fragment,useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n    // const handleAdd = () =>{\r\n\r\n    //     setCategories([...categories, 'Rocio']);\r\n\r\n    // }\r\n    return ( \r\n        <Fragment>\r\n            <h1 className=\"title\">GifExpert App</h1>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ul>\r\n\r\n                {categories.map(category =>\r\n                     <GifGrid\r\n                     key={category}\r\n                      category={category}/>\r\n                )}\r\n            </ul>\r\n\r\n           \r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp/>,document.getElementById('root')\n \n)\n\n\n\n\n"],"sourceRoot":""}